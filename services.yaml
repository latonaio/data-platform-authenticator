apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: data-platform-authenticator
  name: data-platform-authenticator
spec:
  replicas: 1
  selector:
    matchLabels:
      run: data-platform-authenticator
  template:
    metadata:
      labels:
        run: data-platform-authenticator
    spec:
      nodeName: worker
      hostname: data-platform-authenticator
      containers:
        - name: data-platform-authenticator
          image: latonaio/data-platform-authenticator
          imagePullPolicy: Always
          env:
            - name: "MAX_IDLE_CON"
              value: "5"
            - name: "MAX_LIFE_TIME"
              value: "24"
            - name: "MAX_OPEN_CON"
              value: "10"
            - name: "SHUT_DOWN_WAIT_TIME"
              value: "1"
            - name: "DATA_BASE_NAME"
              value: "DataPlatformAuthenticatorSQL"
            - name: "TABLE_NAME"
              value: "data_platform_authenticator_business_user_data"
            - name: "EXP"
              value: "24"
#            - name: AUTHENTICATOR_PRIVATE_KEY
#              valueFrom:
#                secretKeyRef:
#                  name: env-secret
#                  key: AUTHENTICATOR_PRIVATE_KEY
#            - name: AUTHENTICATOR_PUBLIC_KEY
#              valueFrom:
#                secretKeyRef:
#                  name: env-secret
#                  key: AUTHENTICATOR_PUBLIC_KEY
          envFrom:
            - configMapRef:
                name: env-config
            - secretRef:
                name: env-secret
          # todo resource を確保してしまうと落ちてしまう可能性があるためいったんコメントアウト
#          resources:
#            limits:
#              cpu: "1"
#              memory: "200Mi"
#            requests:
#              cpu: "0.5"
#              memory: "100Mi"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: data-platform-authenticator
  name: data-platform-authenticator
spec:
  selector:
    run: data-platform-authenticator
  type: NodePort
  ports:
  - name: data-platform-authenticator
    protocol: TCP
    port: 50500         # kube内のPod間で通信する際に使うポート番号
    nodePort: 30020     # kube外からの通信に必要なポート番号

